Google Cloud Fundamentals: Getting Started with GKE


In this lab, I learnt how to perform the following:

	In the GCP Console, on the Navigation menu, click APIs & Services.
	Scroll down in the list of enabled APIs, and confirm that both of these APIs are enabled:
		Kubernetes Engine API
		Container Registry API

1. Start a Kubernetes Engine cluster:
		- For convenience, place the zone that Qwiklabs assigned you to into an environment variable called MY_ZONE. At the Cloud Shell prompt, type this partial command:
			export MY_ZONE=us-central1-a

		- Start a Kubernetes cluster managed by Kubernetes Engine. Name the cluster webfrontend and configure it to run 2 nodes:
			gcloud container clusters create webfrontend --zone $MY_ZONE --num-nodes 2

		- After the cluster is created, check your installed version of Kubernetes using the kubectl version command:
			kubectl version

		View your running nodes in the GCP Console. On the Navigation menu, click Compute Engine > VM Instances.

		Your Kubernetes cluster is now ready for use.

2. Run and deploy a container
		- From your Cloud Shell prompt, launch a single instance of the nginx container.
			kubectl create deploy nginx --image=nginx:1.17.10

		- View the pod running the nginx container:
			kubectl get pods

		- Expose the nginx container to the Internet:
			kubectl expose deployment nginx --port 80 --type LoadBalancer

		- View the new service:
			kubectl get services

	 You can use the displayed external IP address to test and contact the nginx container remotely.

	 	- Scale up the number of pods running on your service:
	 		kubectl scale deployment nginx --replicas 3

	 	- Confirm that Kubernetes has updated the number of pods:
	 		kubectl get pods

	 	- Confirm that your external IP address has not changed:
	 		kubectl get services
	 		
	 Return to the web browser tab in which you viewed your cluster's external IP address. Refresh the page to confirm that the nginx web server is still responding.

